Tested on Amazon Linux and Amazon Linux 2

sudo yum update -y
sudo yum install -y docker
sudo service docker start
sudo chkconfig docker on
sudo usermod -a -G docker ec2-user

exit SSH & SSH again

docker info
vi Dockerfile

FROM php:7.2-apache
MAINTAINER Dmytro

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
# Tools
    apt-utils \
    wget \
    git \
    nano \
    iputils-ping \
    mysql-client \
    locales \
    imagemagick \
    graphicsmagick \
    ghostscript \
    unzip \
# Configure PHP
    libxml2-dev libfreetype6-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libpng-dev && \
    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \
    docker-php-ext-install -j$(nproc) mysqli soap gd zip opcache && \
    echo 'always_populate_raw_post_data = -1\nmax_execution_time = 240\nmemory_limit = 512M\nmax_input_vars = 1500\nupload_max_filesize = 200M\npost_max_size = 300M' > /usr/local/etc/php/conf.d/typo3.ini && \
# Configure bash
    echo 'export LS_OPTIONS="--color=auto"\nalias ls="ls $LS_OPTIONS"\nalias ll="ls $LS_OPTIONS -aGFlh"\nalias l="ls $LS_OPTIONS -FG"' > ~/.bashrc && \
# Configure Apache & clean
    a2enmod rewrite && \
    apt-get clean && \
    apt-get -y purge \
        libxml2-dev libfreetype6-dev \
        libjpeg62-turbo-dev \
        libmcrypt-dev \
        libpng12-dev && \
    rm -rf /var/lib/apt/lists/* /usr/src/*
# ======= composer =======
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
# Set locales
RUN locale-gen en_US.UTF-8 en_GB.UTF-8 de_DE.UTF-8 es_ES.UTF-8 fr_FR.UTF-8 it_IT.UTF-8 km_KH sv_SE.UTF-8 fi_FI.UTF-8
RUN cd /var/www/html/
RUN wget https://s3.amazonaws.com/labs.thecloudgarage.com/php-gallery-app/docker/php-watermark-gallery.zip --no-check-certificate
RUN unzip php-watermark-gallery.zip
RUN chmod -R 777 /var/www/html/
RUN chown -R www-data:www-data /var/www/html/

Save the file

Run the commands
docker build -t php-watermark-gallery .
docker images
docker run -d -p 80:80 php-watermark-gallery

The container will start. Browse the public IP of the EC2 instance http://public-ip/php-watermark-gallery/

docker ps (view the container)

Push the image to Docker Hub
docker login --username=yourhubusername
password: 

docker tag php-watermark-gallery dockerhubusername/php-watermark-gallery
docker push dockerhubusername/php-watermark-gallery

If successful, then remove the local images

First kill the container
docker ps
docker kill <container id>
docker rmi php-watermark-gallery --force
docker rmi dockerhubusername/php-watermark-gallery --force

Run a new container pulling image from Docker Hub

docker run -d -p 80:80 dockerhubusername/php-watermark-gallery









